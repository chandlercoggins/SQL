# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

# Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL ) 

# Then I inserted the Spotify Data .csv into the table.
# Next, I explored the data using the following SQL.

# First, I viewed all of the data elements in the table.
SELECT* 
FROM BIT_DB.Spotifydata;

# Next, I determined the average danceability by artist.
SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) desc; 

# Then I determeined the top 10 artists based on the popularity of their tracks. 
SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;

# Then I wanted to know the average duration of all tracks in minutes. 
SELECT (AVG(duration_ms)/1000)/60 
FROM BIT_DB.Spotifydata; 

# What is the popularity of the track with the most speechiness?  
SELECT track_name,artist_name,speechiness, popularity 
FROM BIT_DB.Spotifydata 
ORDER BY speechiness desc
LIMIT 1;
